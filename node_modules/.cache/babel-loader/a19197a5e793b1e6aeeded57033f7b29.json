{"ast":null,"code":"var _jsxFileName = \"/home/dell/Learn_react/todo/src/MyComponents/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTodo(props) {\n  _s();\n\n  const [Title, setTitle] = useState(\"\");\n  const [Desc, setDesc] = useState(\"\");\n  const [Error, setError] = useState([{\n    blankTitle: \"\",\n    blankDesc: \"\",\n    numericTitle: \"\",\n    invalidChar: \"\"\n  }]);\n  let Errors = {\n    blankTitle: \"\",\n    blankDesc: \"\",\n    numericTitle: \"\",\n    invalidChar: \"\"\n  }; // const [ Date,setDate] = useState(\"\");\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let letters = /^[A-Za-z1-9' '/-]+$/; //Checks if given desc is empty\n\n    if (!Desc || !Title) {\n      Errors[blankTitle] = \"Title Cannot be blank :)\"; // alert(\"Title/Description cannot be blank\");\n    } //Checks if given title is only numbers \n    else if (!isNaN(Title)) {\n      alert(\"Title cannot be numeric\");\n    } //Checks if given input has invalid characters \n    else if (!Title.match(letters)) {\n      alert(\"Invalid characters\");\n    } //After checks insertion is done (using usestate) below\n    else {\n      {\n        const tempTitle = Title[0].toUpperCase() + Title.slice(1, Title.length);\n        const tempDesc = Desc[0].toUpperCase() + Desc.slice(1, Desc.length);\n        props.addTodo(tempTitle, tempDesc, props.todo_date);\n        setTitle('');\n        setDesc('');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddTodos\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todoTitle\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Title : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Title,\n        onChange: e => setTitle(e.target.value),\n        id: \"todoTitle\",\n        name: \"todoTitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        id: \"TitleError\",\n        children: [\" \", Errors.blankTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todoDesc\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: Desc,\n        onChange: e => setDesc(e.target.value),\n        id: \"todoDesc\",\n        name: \"todoDesc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-green\",\n        type: \"submit\",\n        onClick: onSubmit,\n        children: \" Add TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTodo, \"qcoWiwBJIUfoN4rNi2LHMuKqiMU=\");\n\n_c = AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","AddTodo","props","Title","setTitle","Desc","setDesc","Error","setError","blankTitle","blankDesc","numericTitle","invalidChar","Errors","onSubmit","e","preventDefault","letters","isNaN","alert","match","tempTitle","toUpperCase","slice","length","tempDesc","addTodo","todo_date","target","value"],"sources":["/home/dell/Learn_react/todo/src/MyComponents/AddTodo.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nexport default function AddTodo(props) {\n\n    const [Title, setTitle] = useState(\"\");\n    const [Desc, setDesc] = useState(\"\");\n    const [Error, setError] = useState([\n        {\n            blankTitle: \"\",\n            blankDesc: \"\",\n            numericTitle: \"\",\n            invalidChar: \"\"\n        }\n    ]);\n    let Errors = {\n        blankTitle: \"\",\n        blankDesc: \"\",\n        numericTitle: \"\",\n        invalidChar: \"\"\n    };\n    // const [ Date,setDate] = useState(\"\");\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        let letters = /^[A-Za-z1-9' '/-]+$/;\n        //Checks if given desc is empty\n        if (!Desc || !Title) {\n            Errors[blankTitle]= \"Title Cannot be blank :)\";\n            // alert(\"Title/Description cannot be blank\");\n        }\n        //Checks if given title is only numbers \n        else if (!isNaN(Title)) {\n\n            alert(\"Title cannot be numeric\");\n        }\n        //Checks if given input has invalid characters \n        else if (!Title.match(letters)) {\n            alert(\"Invalid characters\");\n        }\n        //After checks insertion is done (using usestate) below\n        else {\n            {\n                const tempTitle = Title[0].toUpperCase() + Title.slice(1, Title.length);\n                const tempDesc = Desc[0].toUpperCase() + Desc.slice(1, Desc.length);\n                props.addTodo(tempTitle, tempDesc, props.todo_date);\n                setTitle('');\n                setDesc('');\n            }\n        }\n    }\n    return (\n        <div className=\"AddTodos\">\n            <form action=\"\">\n                <label htmlFor=\"todoTitle\"> <h3> Title : </h3></label>\n                <input type=\"text\" value={Title} onChange={(e) => setTitle(e.target.value)} id=\"todoTitle\" name=\"todoTitle\" />\n                <h4 id=\"TitleError\"> {Errors.blankTitle}</h4>\n                <label htmlFor=\"todoDesc\"> <h3>Description : </h3> </label>\n                <input type=\"text\" value={Desc} onChange={(e) => setDesc(e.target.value)} id=\"todoDesc\" name=\"todoDesc\" />\n                <br />\n                <button className=\"btn btn-green\" type=\"submit\" onClick={onSubmit}> Add TODO</button>\n            </form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}